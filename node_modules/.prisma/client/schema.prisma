generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "darwin"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id                        String                      @id @default(cuid())
  firstName                 String?
  secondName                String?
  email                     String?                     @unique
  password                  String?
  emailVerified             Boolean                     @default(false)
  image                     String?
  gender                    String?
  age                       Int                         @default(0)
  role                      String                      @default("client")
  accounts                  Account[]
  customTransactionCategory CustomTransactionCategory[]
  sessions                  Session[]
  transactions              Transaction[]
  budgets                   budget[]

  @@index([id], map: "user_index")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Transaction {
  id                  String              @id @unique @default(cuid())
  title               String
  catogery            String
  note                String?
  amount              Float               @default(0)
  createdAt           DateTime            @default(now())
  lastUpdate          DateTime            @default(now()) @updatedAt
  type                String
  userId              String
  icon                String
  date                DateTime            @default(now())
  budgetId            String?
  budgets             budget?             @relation(fields: [budgetId], references: [id])
  transactionCategory TransactionCategory @relation(fields: [catogery], references: [id])
  user                User                @relation(fields: [userId], references: [id])

  @@index([id], map: "transaction_index")
  @@index([budgetId], map: "Transaction_budgetId_fkey")
  @@index([catogery], map: "Transaction_catogery_fkey")
  @@index([userId], map: "Transaction_userId_fkey")
}

model budget {
  id           String           @id @default(cuid())
  name         String
  amount       Float            @default(0)
  currency     String
  startedDate  DateTime         @default(now())
  createdAt    DateTime         @default(now())
  lastUpdate   DateTime         @updatedAt
  endDate      DateTime         @default(now())
  userId       String
  user         User             @relation(fields: [userId], references: [id])
  categories   BudgetCategory[]
  transactions Transaction[]

  @@index([userId], map: "budget_userId_fkey")
}

model BudgetCategory {
  id         String @id @default(cuid())
  budgetId   String
  categoryId String
  budget     budget @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  @@index([budgetId], map: "BudgetCategory_budgetId_fkey")
}

model TransactionCategory {
  id          String        @id @unique @default(cuid())
  title       String
  type        String
  icon        String
  transaction Transaction[]

  @@index([id], map: "transaction_category_index")
}

model CustomTransactionCategory {
  userId String
  id     String @id @unique @default(cuid())
  title  String
  type   String
  icon   String
  user   User   @relation(fields: [userId], references: [id])

  @@index([id], map: "transaction_category_index")
  @@index([userId], map: "CustomTransactionCategory_userId_fkey")
}
